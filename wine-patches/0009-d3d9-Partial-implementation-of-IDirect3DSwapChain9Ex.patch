From 949399389631cf0a3bb10d504e2fc7afc406200a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Sun, 25 Aug 2013 03:30:23 +0200
Subject: d3d9: Partial implementation of IDirect3DSwapChain9Ex

---
 dlls/d3d9/swapchain.c |   63 ++++++++++++++++++++++++++++++++++++++++++++++++-
 include/d3d9.h        |   14 ++++++++++-
 include/d3d9types.h   |    9 +++++++
 3 files changed, 84 insertions(+), 2 deletions(-)

diff --git a/dlls/d3d9/swapchain.c b/dlls/d3d9/swapchain.c
index 8177336..f29fade 100644
--- a/dlls/d3d9/swapchain.c
+++ b/dlls/d3d9/swapchain.c
@@ -34,7 +34,7 @@ static HRESULT WINAPI d3d9_swapchain_QueryInterface(IDirect3DSwapChain9 *iface,
 {
     TRACE("iface %p, riid %s, out %p.\n", iface, debugstr_guid(riid), out);
 
-    if (IsEqualGUID(riid, &IID_IDirect3DSwapChain9)
+    if (IsEqualGUID(riid, &IID_IDirect3DSwapChain9) || IsEqualGUID(riid, &IID_IDirect3DSwapChain9Ex)
             || IsEqualGUID(riid, &IID_IUnknown))
     {
         IDirect3DSwapChain9_AddRef(iface);
@@ -221,12 +221,68 @@ static HRESULT WINAPI d3d9_swapchain_GetPresentParameters(IDirect3DSwapChain9 *i
     return D3D_OK;
 }
 
+static HRESULT WINAPI d3d9_swapchain_GetLastPresentCount(IDirect3DSwapChain9 *iface,
+        UINT *pLastPresentCount)
+{
+    TRACE("iface %p, pLastPresentCount %p.\n", iface, pLastPresentCount);
+    WARN("not implemented.\n");
+
+    if(pLastPresentCount)
+        *pLastPresentCount = 0;
+
+    return D3D_OK;
+}
+
+static HRESULT WINAPI d3d9_swapchain_GetPresentStatistics(IDirect3DSwapChain9 *iface,
+        D3DPRESENTSTATS *pPresentationStatistics)
+{
+    TRACE("iface %p, pPresentationStatistics %p.\n", iface, pPresentationStatistics);
+    WARN("not implemented.\n");
+
+    return D3D_OK;
+}
+
+static HRESULT WINAPI d3d9_swapchain_GetDisplayModeEx(IDirect3DSwapChain9 *iface,
+        D3DDISPLAYMODEEX *pMode, D3DDISPLAYROTATION *pRotation)
+{
+    struct d3d9_swapchain *swapchain = impl_from_IDirect3DSwapChain9(iface);
+    struct wined3d_display_mode wined3d_mode;
+    enum wined3d_display_rotation wined3d_rotation;
+    HRESULT hr;
+
+    TRACE("iface %p, pMode %p, pRotation %p.\n", iface, pMode, pRotation);
+
+    wined3d_mutex_lock();
+    hr = wined3d_swapchain_get_display_mode(swapchain->wined3d_swapchain, &wined3d_mode, &wined3d_rotation);
+    wined3d_mutex_unlock();
+
+    if (SUCCEEDED(hr))
+    {
+        if(pMode){
+            pMode->Size              = sizeof(D3DDISPLAYMODEEX);
+            pMode->Width             = wined3d_mode.width;
+            pMode->Height            = wined3d_mode.height;
+            pMode->RefreshRate       = wined3d_mode.refresh_rate;
+            pMode->Format            = d3dformat_from_wined3dformat(wined3d_mode.format_id);
+            pMode->ScanLineOrdering  = wined3d_mode.scanline_ordering; // identical in wined3d
+        }
+
+        if(pRotation){
+            *pRotation              = wined3d_rotation; // identical in wined3d
+        }
+    }
+
+    return hr;
+}
 
 static const struct IDirect3DSwapChain9Vtbl d3d9_swapchain_vtbl =
 {
+    /* IUnknown */
     d3d9_swapchain_QueryInterface,
     d3d9_swapchain_AddRef,
     d3d9_swapchain_Release,
+
+    /* IDirect3DSwapChain9 */
     d3d9_swapchain_Present,
     d3d9_swapchain_GetFrontBufferData,
     d3d9_swapchain_GetBackBuffer,
@@ -234,6 +290,11 @@ static const struct IDirect3DSwapChain9Vtbl d3d9_swapchain_vtbl =
     d3d9_swapchain_GetDisplayMode,
     d3d9_swapchain_GetDevice,
     d3d9_swapchain_GetPresentParameters,
+
+    /* IDirect3DSwapChain9Ex */
+    d3d9_swapchain_GetLastPresentCount,
+    d3d9_swapchain_GetPresentStatistics,
+    d3d9_swapchain_GetDisplayModeEx
 };
 
 static void STDMETHODCALLTYPE d3d9_swapchain_wined3d_object_released(void *parent)
diff --git a/include/d3d9.h b/include/d3d9.h
index 382b241..71326c9 100644
--- a/include/d3d9.h
+++ b/include/d3d9.h
@@ -388,7 +388,7 @@ DECLARE_INTERFACE_(IDirect3DVolume9,IUnknown)
 #endif
 
 /*****************************************************************************
- * IDirect3DSwapChain9 interface
+ * IDirect3DSwapChain9(Ex) interface
  */
 #define INTERFACE IDirect3DSwapChain9
 DECLARE_INTERFACE_(IDirect3DSwapChain9,IUnknown)
@@ -405,6 +405,10 @@ DECLARE_INTERFACE_(IDirect3DSwapChain9,IUnknown)
     STDMETHOD(GetDisplayMode)(THIS_ D3DDISPLAYMODE* pMode) PURE;
     STDMETHOD(GetDevice)(THIS_ struct IDirect3DDevice9** ppDevice) PURE;
     STDMETHOD(GetPresentParameters)(THIS_ D3DPRESENT_PARAMETERS* pPresentationParameters) PURE;
+    /*** IDirect3DSwapChain9Ex methods ***/
+    STDMETHOD(GetLastPresentCount)(THIS_ UINT* pLastPresentCount) PURE;
+    STDMETHOD(GetPresentStats)(THIS_ D3DPRESENTSTATS* pPresentationStatistics) PURE;
+    STDMETHOD(GetDisplayModeEx)(THIS_ D3DDISPLAYMODEEX* pMode,D3DDISPLAYROTATION* pRotation) PURE;
 };
 #undef INTERFACE
 
@@ -421,6 +425,10 @@ DECLARE_INTERFACE_(IDirect3DSwapChain9,IUnknown)
 #define IDirect3DSwapChain9_GetDisplayMode(p,a)          (p)->lpVtbl->GetDisplayMode(p,a)
 #define IDirect3DSwapChain9_GetDevice(p,a)               (p)->lpVtbl->GetDevice(p,a)
 #define IDirect3DSwapChain9_GetPresentParameters(p,a)    (p)->lpVtbl->GetPresentParameters(p,a)
+/*** IDirect3DSwapChain9Ex methods ***/
+#define IDirect3DSwapChain9Ex_GetLastPresentCount(p,a)   (p)->lpVtbl->GetLastPresentCount(p,a)
+#define IDirect3DSwapChain9Ex_GetPresentStats(p,a)       (p)->lpVtbl->GetPresentStats(p,a)
+#define IDirect3DSwapChain9Ex_GetDisplayModeEx(p,a,b)    (p)->lpVtbl->GetDisplayModeEx(p,a,b)
 #else
 /*** IUnknown methods ***/
 #define IDirect3DSwapChain9_QueryInterface(p,a,b)        (p)->QueryInterface(a,b)
@@ -434,6 +442,10 @@ DECLARE_INTERFACE_(IDirect3DSwapChain9,IUnknown)
 #define IDirect3DSwapChain9_GetDisplayMode(p,a)          (p)->GetDisplayMode(a)
 #define IDirect3DSwapChain9_GetDevice(p,a)               (p)->GetDevice(a)
 #define IDirect3DSwapChain9_GetPresentParameters(p,a)    (p)->GetPresentParameters(a)
+/*** IDirect3DSwapChain9Ex methods ***/
+#define IDirect3DSwapChain9Ex_GetLastPresentCount(p,a)   (p)->GetLastPresentCount(a)
+#define IDirect3DSwapChain9Ex_GetPresentStats(p,a)       (p)->GetPresentStats(a)
+#define IDirect3DSwapChain9Ex_GetDisplayModeEx(p,a,b)    (p)->GetDisplayModeEx(a,b)
 #endif
 
 /*****************************************************************************
diff --git a/include/d3d9types.h b/include/d3d9types.h
index cdd3ada..b772e63 100644
--- a/include/d3d9types.h
+++ b/include/d3d9types.h
@@ -1559,6 +1559,15 @@ typedef enum _D3DCOMPOSERECTSOP{
     D3DCOMPOSERECTS_NEG,
     D3DCOMPOSERECTS_FORCE_DWORD = 0x7fffffff
 } D3DCOMPOSERECTSOP;
+
+typedef struct _D3DPRESENTSTATS {
+    UINT          PresentCount;
+    UINT          PresentRefreshCount;
+    UINT          SyncRefreshCount;
+    LARGE_INTEGER SyncQPCTime;
+    LARGE_INTEGER SyncGPUTime;
+} D3DPRESENTSTATS;
+
 #endif /* D3D_DISABLE_9EX */
 
 typedef enum _D3DSHADER_COMPARISON
-- 
1.7.9.5

