#
# Path to the wine directory or the wine executable. When you
# specify a directory it should contain /bin/wine.
#
winePath            = $share/wine

#
# Path to the wine prefix containing Shockwave
#
winePrefix          = $HOME/.wine-pipelight

#
# The wine architecture for the wine prefix containing Shockwave
#
wineArch            = win32

#
# Path to the plugin loader executable
# (Should be set correctly by the make script)
#
pluginLoaderPath    = $share/pluginloader.exe

#
# Path to the runtime DLLs (libgcc_s_sjlj-1.dll, libspp-0.dll,
# libstdc++-6.dll). Only necessary when these DLLs are not in the same
# directory as the pluginloader executable.
#
gccRuntimeDlls      = @@GCC_RUNTIME_DLLS@@

#
# Path and name to the Shockwave library
# You should prefer using regKey and consider this option only if you have
# multiple versions of the Shockwave plugin installed inside the Wineprefix.
#
# dllPath           = C:\windows\system32\Adobe\Director\
# dllName           = np32dsw_1204144.dll

#
# Name of the registry key at HKCU\Software\MozillaPlugins\ or
# HKLM\Software\MozillaPlugins\ where to search for the plugin path.
#
# You should use this option instead of dllPath/dllName in most cases
# since you do not need to alter dllPath on a Shockwave update.
#
regKey              = @adobe.com/ShockwavePlayer

#
# fakeVersion allows to fake the version string of Shockwave
# We don't know any reason why it would be necessary for Shockwave
#
# fakeVersion       = 12.0.4.144

#
# overwriteArg allows to overwrite/add initialization arguments
# passed by websites to Shockwave applications. You can
# use this option as often as you want to overwrite multiple
# parameters. Shockwave encapsulates most shockwave parameters into
# the swremote parameter. It is therefore only possible to overwrite
# all of the swremote subkeys or none.
#
# The subkeys which we found are:
# swSaveEnabled
# swVolume
# swRestart
# swPausePlay
# swFastForward
# swContextMenu
#
# Some more information about this topic are available at
# http://www.director-online.com/buildArticle.php?id=357
#
# Example:
# overwriteArg = swremote="swSaveEnabled='true' swVolume='true' swRestart='true' swPausePlay='true' swFastForward='true' swContextMenu='true'"
#

#
# windowlessmode refers to a term of the Netscape Plugin API and
# defines a different mode of drawing and handling events.
# Shockwave will automatically switch to windowless mode if it is not
# disabled by the website. We set the default value to false to mime
# the behavior of a normal browser.
# [default: false]
#
windowlessMode      = false

#
# embed defines whether the Shockwave plugin should be shown
# inside the browser (true) or an external window (false).
# [default: true]
#
embed               = true

#
# Path to the dependency installer script provided by the compholio
# package. (optional)
#
dependencyInstaller = $share/install-dependency

#
# Dependencies which should be installed for this plugin via the
# dependencyInstaller, can be used multiple times. (optional)
#
# Useful values for Shockwave are:
#   wine-Shockwave-installer
#
dependency          = wine-shockwave-installer

#
# Doesn't show any dialogs which require manual confirmation during
# the installation process, like EULA or DRM dialogs.
# [default: true]
#
quietInstallation   = @@QUIET_INSTALLATION@@

#
# In order to support browsers without NPAPI timer support
# (like Midori) we've implemented a fallback to
# NPN_PluginThreadAsyncCall. In the default configuration
# a timer based approach is preferred over async calls and the
# plugin decides by itself which method to use depending on the
# browser capabilities. Setting the following option to true
# forces the plugin to use async calls. This might be mainly
# useful for testing the difference between both event handling
# approaches. [default: false]
#
# eventAsyncCall    = true
